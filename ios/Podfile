require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

platform :ios, '12.4'

project 'Tabibi',
'Doctor.debug' => :debug,
'Doctor.release' => :release, 
'Patient.debug' => :debug,
'Patient.release' => :release 
# ENVFILES = {
#   'Doctor.debug' => '$(PODS_ROOT)/../../.env.doctor',
#   'Doctor.release' => '$(PODS_ROOT)/../../.env.doctor',
#   'Patient.release' => '$(PODS_ROOT)/../../.env.patient',
#   'Patient.debug' => '$(PODS_ROOT)/../../.env.patient'
# }
target 'Tabibi' do
  config = use_native_modules!

  use_react_native!(:path => config["reactNativePath"])

  pod 'react-native-config', :path => '../node_modules/react-native-config'

  # pod 'rn-fetch-blob', :path => '../node_modules/rn-fetch-blob'

  pod 'opentok-react-native', :path => '../node_modules/opentok-react-native'

  pod 'RNVoipCall', :path => '../node_modules/react-native-voip-call'

  target 'TabibiTests' do
    inherit! :complete
    # Pods for testing
  end
  post_install do |installer|
  
    # Added code below
    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        config.build_settings["EXCLUDED_ARCHS[sdk=iphonesimulator*]"] = "arm64"
      end
    end
  end
  # react-native-config 
  # post_install do |installer|
  #   installer.pods_project.targets.each do |target|
  #     target.build_configurations.each do |config|
  #       if target.name == 'react-native-config'
  #         config.build_settings['ENVFILE'] = ENVFILES[config.name]
  #       end
  #     end
  #   end
  # end
  # Enables Flipper.
  #
  # Note that if you have use_frameworks! enabled, Flipper will not work and
  # you should disable these next few lines.
  # use_flipper!({'Flipper' => '2.3.0'})
  # post_install do |installer|
  
        # flipper_post_install(installer)
      # end

end

target 'Tabibi-tvOS' do
  # Pods for Tabibi-tvOS

  target 'Tabibi-tvOSTests' do
    inherit! :search_paths
    # Pods for testing
  end
end
